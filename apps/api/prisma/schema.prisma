generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Trainee {
  id Int @id @default(autoincrement())

  name     String
  username String @unique

  Workout   Workout[]
  OneRepMax OneRepMax[]
}

model Workout {
  id        Int @id @default(autoincrement())
  traineeId Int

  date    DateTime
  comment String?

  trainee Trainee @relation(fields: [traineeId], references: [id])
  Set     Set[]
}

model Set {
  id         Int @id @default(autoincrement())
  workoutId  Int
  exerciseId Int

  order     Int        @db.SmallInt
  multiple  Int        @default(1) @db.SmallInt
  reps      Int        @db.SmallInt
  weight    Int        @db.SmallInt
  unit      WeightUnit @default(kg)
  isWorkSet Boolean    @default(false)
  comment   String?

  workout  Workout  @relation(fields: [workoutId], references: [id])
  exercise Exercise @relation(fields: [exerciseId], references: [id])
}

model Exercise {
  id Int @id @default(autoincrement())

  nameCode String

  Set       Set[]
  OneRepMax OneRepMax[]
}

model OneRepMax {
  id         Int @id @default(autoincrement())
  traineeId  Int
  exerciseId Int

  /// TODO share between exercises?
  value    Int        @db.SmallInt
  unit     WeightUnit @default(kg)
  starting DateTime

  trainee  Trainee  @relation(fields: [traineeId], references: [id])
  exercise Exercise @relation(fields: [exerciseId], references: [id])
}

enum WeightUnit {
  kg
  lbs
}

model Locale {
  code String @id @db.Char(5)

  Translation Translation[]
}

model Translation {
  localeCode String @db.Char(5)

  code  String
  value String

  locale Locale @relation(fields: [localeCode], references: [code])

  @@id([localeCode, code])
}
